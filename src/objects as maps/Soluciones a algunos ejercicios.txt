EjerciciosJS/src/objects as maps/exercise1/index.js 
---------------------------------------------------

const phrase = "No hay bien que por mal no venga";
const counters = {};
function countLetter (letter, countersObject) {
    if(counters.hasOwnProperty(letter) === false){
        counters[letter] = 0;
    }
    if(counters.hasOwnProperty(letter)){
        counters[letter]++;
    }
}
for (letter of phrase) {
    console.log(letter)
    countLetter(letter, counters)
}
console.log(JSON.stringify(counters))

EjerciciosJS/src/objects as maps/exercise2/index.js
---------------------------------------------------
const chrono = [
    {
        name: "Ana",
        time: 102.01
    },
    {
        name: "Pablo",
        time: 105.82
    },
    {
        name: "Marco",
        time: 100.4
    },
    {
        name: "Luisa",
        time: 103.39
    },
    {
        name: "Pedro",
        time: 109.09
    },
]

// Put you code here
console.log(chrono.sort((a,b)=>a.time - b.time))


EjerciciosJS/src/objects as maps/exercise3/index.js 
---------------------------------------------------
const people = [
    {
        name: "Ana",
        time: 102.01
    },
    {
        name: "Pablo",
        time: 105.82
    },
    {
        name: "Marco",
        time: 100.4
    },
    {
        name: "Luisa",
        time: 103.39
    },
    {
        name: "Pedro",
        time: 109.09
    },
]
console.log(people[1].time)

function aFasterThanB (a, b) {
    return people[a].time > people[b].time
}

function bFasterThanA (a,b) {
    return people[a].time < people[b].time
}

function swap (idxA, idxB, array) {
    if(true){
        let swapVar = null;
        swapVar = array[idxA]
        array[idxA] = array[idxB]
        array[idxB] = swapVar
    }
}

function sort (comparator, array) {
    for ( let currentIdx = 0 ; currentIdx < array.length-1 ; currentIdx++) {
        for ( let nextIdx = currentIdx+1 ; nextIdx < array.length ; nextIdx++ ) {
            if (
                comparator(currentIdx, nextIdx)
            ) swap (currentIdx, nextIdx, array)
        }
    }
}

console.log(people);
sort(aFasterThanB, people)
console.log(people);
sort(bFasterThanA, people)
console.log(people);


Otra SoluciÃ³n:
--------------

function aFasterThanB(a,b) {
    
    return a > b;
}


function bFasterThanA(a, b) {
    return b > a;
}


function swap(runnerA, runnnerB, people) {
    const temp = people[runnerA].time;
    people[runnerA].time = people[runnnerB].time;
    people[runnnerB].time = temp;
}

function sort(comparator, people) {
    for (let currentIdx = 0; currentIdx < people.length - 1; currentIdx++) {
        for (let nextIdx = currentIdx + 1; nextIdx < people.length; nextIdx++) {
            if (
                comparator(people[currentIdx].time, people[nextIdx].time)
            ) swap(currentIdx, nextIdx, people)
        }
    }
}



sort(aFasterThanB, people);
console.log(people);
sort(bFasterThanA, people);
console.log(people);


 


